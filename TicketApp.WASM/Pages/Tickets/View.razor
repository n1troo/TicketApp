@page "/tickets/view/{Id}"
@inject ITicketRepository _repo
@inject NavigationManager _navManager
@inject IToastService _toastService


<h3>View Details</h3>
<hr/>
<br/>
@if (int.Parse(Id) < 1 || string.IsNullOrWhiteSpace(Id))
{
    <ErrorMessage Message="Invalid Selection. Please Try Again"/>
}
else if (Model == null)
{
    <LoadingMessage Message="Loading Details"/>
}
else
{
    <div class="row">
        <div class="col-6">
            <table class="table table-responsive">
                <tr>
                    <td>
                        <strong>Title</strong>
                    </td>
                    <td>@Model.Title</td>
                </tr>
                <tr>
                    <td>
                        <strong>Customer</strong>
                    </td>
                    <td>
                        @if (Model.Customer == null)
                        {
                            <span class="text-muted">No customer Recorded</span>
                        }
                        else
                        {
                            <a href="/customers/view/@Model.CustomerId">@Model.Customer.Name @Model.Customer.Description</a>
                        }
                    </td>
                </tr>
                <tr>
                    <td>
                        <strong>Summary</strong>
                    </td>
                    <td>@Model.Summary</td>
                </tr>
                <tr>
                    <td>
                        <strong>Contact Person</strong>
                    </td>
                    <td>@Model.ContactPerson</td>
                </tr>
                <tr>
                    <td>
                        <strong>Time</strong>
                    </td>
                    <td>@Model.Time</td>
                </tr>

            </table>
        </div>
        <div class="col-4">
            <img src="@string.Format("data:image/png;base64,{0}", Model.File)" style="height:300px; width:300px"/>
            <h3 class="text-center text-info">@string.Format("{0:C}", Model.Time)</h3>
        </div>
    </div>
}

<button @onclick="GoToEdit" class="btn btn-outline-warning">
    <span class="oi oi-pencil"></span>
    Edit
</button>
<button @onclick="GoToDelete" class="btn btn-outline-danger">
    <span class="oi oi-circle-x"></span>
    Delete
</button>
<button @onclick="BackToList" class="btn btn-outline-secondary">
    <span class="oi oi-media-skip-backward"></span>
    Back To List
</button>

@code {

    [Parameter]
    public string Id { get; set; }

    private Ticket Model = new();

    protected override async Task OnInitializedAsync()
    {
        var id = Convert.ToInt32(Id);
        Model = await _repo.Get(Endpoints.TicketEndpoint, id);
        _toastService.ShowInfo($"Now Viewing {Model.Title}");
    }

    private void BackToList()
    {
        _navManager.NavigateTo("/tickets/");
    }

    private void GoToEdit()
    {
        _navManager.NavigateTo($"/tickets/edit/{Model.Id}");
    }

    private void GoToDelete()
    {
        _navManager.NavigateTo($"/tickets/delete/{Model.Id}");
    }

}